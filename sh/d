#!/bin/bash

# alias d="cvs diff -u | vim -M -"
# alias dh="cvs diff -u -rHEAD | vim -M -"
alias up='cvs -q     update -d -A'
alias upn='cvs -q     update -A'
#alias ch="(cvs diff -u  | awk '/^Index/{print \$2}' ) 2> /dev/null"

function d {
    if test -d .svn; then
        svn diff $* | vim -M -
    elif test -d CVS; then
        cvs diff -u $* | vim -M -
    else
        git diff $* | vim -M -
    fi
}

function dh {
    if test -d .svn; then
        svn diff  -rHEAD $* | vim -M -
    else
        cvs diff -u -rHEAD $* | vim -M -
    fi
}

function dp {
    if test -d .svn; then
        svn diff  $* | tee /dev/shm/p
    elif test -d CVS; then
        cvs diff -u $* | tee /dev/shm/p
    else
        git diff  $* | tee /dev/shm/p
    fi
}
function pd {
    ARGS="$*"
    if [[ "$ARGS" == "" ]]; then ARGS="-p0 "; fi;
    patch $ARGS < /dev/shm/p 
}

function st {
    if test -d .svn; then
       svn status $* | grep -v '? *.*\.\(root\|log\|swp\|png\|pdf\)$\|\.log\.\|__init__\.py$\|? .*\.__afs'
    elif test -d CVS; then
       cvs -q -n update -d -A $* | grep -v '? .*\.\(root\|log\|swp\|png\|pdf\)$\|\.log\.\|__init__\.py$\|? .*\.__afs'
    else 
        git status $*
    fi;
}
function stu {
    if test -d .svn; then
       svn status -u $* | grep -v '? *.*\.\(root\|log\|swp\|png\|pdf\)$\|\.log\.\|__init__\.py$\|? .*\.__afs'
    else 
       cvs -q -n update -d -A $* | grep -v '? .*\.\(root\|log\|swp\|png\|pdf\)$\|\.log\.\|__init__\.py$\|? .*\.__afs'
    fi;
}


function stn  {
    cvs -q -n update -A $* | grep -v '? .*\.\(root\|log\|swp\|png\|pdf\)$\|\.log\.\|__init__\.py$\|? .*\.__afs'
}


function ch {
    (cvs diff -u | awk '/^Index/{print $2}' ) 2> /dev/null
    cvs -q -n update -A 2> /dev/null | grep -v '\.\(root\|log\|swp\|png\|pdf\)$\|__init__\.py$\|? .*\.__afs' | awk '/^? /{print $2" (NEW)"}'
    cvs -q -n update -A 2> /dev/null | grep -v '\.\(root\|log\|swp\|png\|pdf\)$\|__init__\.py$\|? .*\.__afs' | awk '/^A /{print $2" (ADDED)"}'
}
function chc {
    (cvs diff -u | awk '/^Index/{print $2}' ) 2> /dev/null
}

function st1 {
    FILES="$*"
    if [[ $FILES == "" ]]; then
        cvs -q -n update -A 2> /dev/null | grep '^? ' | sed 's/$/\t(NoCVS)/';
    fi;
    if [[ $FILES == "" ]]; then FILES="$(find . -type f | grep -v CVS)"; fi 
    for f in $FILES; do 
        BRANCH0=$(grep -h $(basename $f) CVS/Entries */CVS/Entries 2> /dev/null | awk -F/ '{print $6}'); 
        BRANCH1=${BRANCH0:-HEAD}
        BRANCH=${BRANCH1#T}
        STATUS=$(cvs -q -n update -A -r$BRANCH $f 2>/dev/null | grep '^[A-Z] ');
        if [[ $STATUS != "" ]]; then 
            echo -e "$STATUS\t($BRANCH)";
        fi;
    done;
}

function wb {
    FILES="$*"
    if [[ $FILES == "" ]]; then
        cvs -q -n update -A 2> /dev/null | awk '/^? /{print $2"\t(NoCVS)"}';
    fi;
    if [[ $FILES == "" ]]; then FILES="$(find . -type f | grep -v CVS)"; fi
    for f in $FILES; do
        BRANCH0=$(grep -h $(basename $f) CVS/Entries */CVS/Entries 2> /dev/null | awk -F/ '{print $6}');
        BRANCH1=${BRANCH0:-HEAD}
        BRANCH=${BRANCH1#T}
        echo -e "$f\t($BRANCH)";
    done;
}

function up1 {
    FILES="$*"
    if [[ $FILES == "" ]]; then
        cvs -q -n update -A 2> /dev/null | awk '/^? /{print "cvs add "$2}';
    fi;
    if [[ $FILES == "" ]]; then FILES="$(find . -type f | grep -v CVS)"; fi
    for f in $FILES; do
        BRANCH0=$(grep -h $(basename $f) CVS/Entries */CVS/Entries 2> /dev/null | awk -F/ '{print $6}'); 
        BRANCH1=${BRANCH0:-HEAD}
        BRANCH=${BRANCH1#T}
        STATUS=$(cvs -q -n update -A -r$BRANCH $f 2>/dev/null | grep '^[A-Z] ');
        if [[ $STATUS != "" ]]; then
            if [[ $BRANCH == "HEAD" ]]; then
                echo "cvs -q update -A  $f";
            else
                echo "cvs -q update -A -r${BRANCH} $f";
            fi;
        fi;
    done;
}


function cmstarget {
    RELEASE=$1
    if [[ "$RELEASE" == "" ]]; then
        RELEASE=$(echo $CMSSW_VERSION} | awk -F_ '{print $1"_"$2"_"$3"_X"}');
    else
        RELEASE=CMSSW_${RELEASE##CMSSW_};
    fi;
    echo "Setting target release to $RELEASE";
    export CMSSW_TARGET_VERSION=$RELEASE;
}

function qt {
    RELEASE=${CMSSW_TARGET_VERSION:-$CMSSW_VERSION}
    PACKAGES=$*
    if [[ "$PACKAGES" == "" ]]; then PACKAGES=${PWD##$CMSSW_BASE/src/}; fi;
    for PKG in $PACKAGES; do
        echo -e "$PKG\t$(PackageManagement.pl -j -q --release=$RELEASE --pack=$PKG)";
    done;
}

function qq {
    RELEASE=$1
    if [[ "$RELEASE" == "" ]]; then
        RELEASE=$(echo $CMSSW_VERSION} | awk -F_ '{print $1"_"$2"_"$3"_X"}');
    else
        RELEASE=CMSSW_${RELEASE##CMSSW_};
    fi;
    echo "Using queue for $RELEASE" 1>&2 ;
    wget --no-check -qO- "https://cmstags.cern.ch/cgi-bin/CmsTC/CreateTagList?release=$RELEASE" | sed '/<.*table.*>/d; s,</*t[rd]> *,,g'
}

function listtag {
    if [[ "$1" == "T" ]]; then
        cvs -q log | grep -o 'T..-..-..\(-..\)\?' | grep $* | sort | uniq -c | sort -k 2 -r | head;
    elif [[ "$*" != "" ]]; then
        cvs -q log | grep -o 'V..-..-..\(-..\)\?' | grep $* | sort | uniq -c | sort -k 2 -r | head;
    else
        cvs -q log | grep -o 'V..-..-..\(-..\)\?' | sort | uniq -c | sort -k 2 -r | head;
    fi
}

function cmg-try-pr {
    PR=$1
    if [[ "$PR" == "" ]]; then echo "Please specify PR number "; fi
    if test -d $CMSSW_BASE/src/CMGTools/.git; then 
        echo "This is CMGTools-lite"
        WD=$CMSSW_BASE/src/CMGTools
        if expr match $CMSSW_VERSION CMSSW_8_0_* > /dev/null; then
            CMG=80X
        elif expr match $CMSSW_VERSION CMSSW_7_6_* > /dev/null; then
            CMG=76X
        elif expr match $CMSSW_VERSION CMSSW_7_4_* > /dev/null; then
            CMG=74X
        fi
    else
        WD=$CMSSW_BASE/src
        CMG=CMGTools-from-CMSSW_7_2_3
        if expr match $CMSSW_VERSION CMSSW_7_4_1[23456789]* > /dev/null; then
            CMG=CMGTools-from-CMSSW_7_4_12
        elif expr match $CMSSW_VERSION CMSSW_7_4_* > /dev/null; then
            CMG=CMGTools-from-CMSSW_7_4_7
        fi
    fi
    ( cd $WD && \
        git fetch cmg-central && \
        git checkout cmg-central/$CMG 2> /dev/null && \
        (git branch -D test_pr$PR || /bin/true) && \
        git checkout -b test_pr$PR && \
        git pull cmg-central pull/$PR/head && \
        ( cd $CMSSW_BASE; scramv1 b -j 6; rm $CMSSW_BASE/lib/$SCRAM_ARCH/.poisonededmplugincache ) )
    #git --exec-path=/cvmfs/cms.cern.ch/slc6_amd64_gcc491/external/git/1.8.3.1-odfocd/libexec/git-core/ pull cmg-central pull/$PR/head && \
}
function cmg-here-pr {
    PR=$1
    if [[ "$PR" == "" ]]; then echo "Please specify PR number "; fi
    CMG=CMGTools-from-CMSSW_7_2_3
    if expr match $CMSSW_VERSION CMSSW_7_4_1[23456789]* > /dev/null; then
        CMG=CMGTools-from-CMSSW_7_4_12
    elif expr match $CMSSW_VERSION CMSSW_7_4_* > /dev/null; then
        CMG=CMGTools-from-CMSSW_7_4_7
    fi
    HERE=$(git branch | awk '{if ($1 == "*") print $2;}')
    [[ "$HERE" == "(detached" ]] && HERE="head_";
    BR="${HERE}_plus${PR}"
    git fetch cmg-central && \
    (git branch -D $BR || /bin/true) && \
    git checkout -b $BR && \
    git --exec-path=/cvmfs/cms.cern.ch/slc6_amd64_gcc491/external/git/1.8.3.1-odfocd/libexec/git-core/ pull cmg-central pull/$PR/head && \
    ( cd $CMSSW_BASE; scramv1 b -j 6; rm $CMSSW_BASE/lib/$SCRAM_ARCH/.poisonededmplugincache )
}

function cmg-try-merge-heppy {
    git fetch cmg-central && \
    git checkout -b test_heppy cmg-central/CMGTools-from-CMSSW_7_4_12 && \
    git pull cmg-central heppy_74X && \
    ( cd $CMSSW_BASE; scramv1 b -j 6; rm $CMSSW_BASE/lib/$SCRAM_ARCH/.poisonededmplugincache )
}
function cmg-heppy-pr {
    PR=$1
    if [[ "$PR" == "" ]]; then echo "Please specify PR number "; return; fi
    CMG=heppy_76X
    if expr match $CMSSW_VERSION CMSSW_7_4_* > /dev/null; then CMG=heppy_74X; fi;
    if expr match $CMSSW_VERSION CMSSW_8_0_* > /dev/null; then CMG=heppy_80X; fi;
    ( cd $CMSSW_BASE/src && \
    git fetch cmg-central && \
    git checkout cmg-central/$CMG 2> /dev/null && \
    (git branch -D test_pr$PR || /bin/true) && \
    git checkout -b test_pr$PR && \
    git pull cmg-central pull/$PR/head && \
    ( cd $CMSSW_BASE; scramv1 b -j 6; rm $CMSSW_BASE/lib/$SCRAM_ARCH/.poisonededmplugincache ) )
    #git --exec-path=/cvmfs/cms.cern.ch/slc6_amd64_gcc491/external/git/1.8.3.1-odfocd/libexec/git-core/ pull cmg-central pull/$PR/head && \
}
